//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerCameraControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerCameraControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""34b4501e-7900-4224-b536-60d82aac5eb0"",
            ""actions"": [
                {
                    ""name"": ""Camera_Move"",
                    ""type"": ""Value"",
                    ""id"": ""51e8f553-e5ef-49f2-b6fb-5a5b71e13c3d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Camera_Rotate"",
                    ""type"": ""Value"",
                    ""id"": ""4117026f-819f-4a65-9935-b87166b41d34"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Camera_Rotate_Toggle"",
                    ""type"": ""Button"",
                    ""id"": ""6a9df15c-7bd6-4cb0-b10b-f5c983cb2f5d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Camera_Zoom"",
                    ""type"": ""Value"",
                    ""id"": ""1bbd988a-7f7e-457b-929f-03fc99006df5"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""e570b7eb-5b68-457d-abdf-d7344e89434d"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera_Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""e436bb49-895b-44e1-8941-a79eb2c467f1"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera_Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""bca5d95d-471a-4d6c-a828-21750b50fea0"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera_Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""4821fa40-b18d-456c-88dd-eb5a0aace863"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera_Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""927a57f9-3e03-4779-8aa7-be46bd858686"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera_Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""bb95acb2-8998-467e-bd86-d8c1c8000cd9"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera_Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""00e9da9a-a602-40e6-a3d7-63241cf98432"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera_Rotate_Toggle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b7feaf74-9b1f-4d21-a503-962fb07c55b0"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": ""NormalizeVector2"",
                    ""groups"": """",
                    ""action"": ""Camera_Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Camera_Move = m_Player.FindAction("Camera_Move", throwIfNotFound: true);
        m_Player_Camera_Rotate = m_Player.FindAction("Camera_Rotate", throwIfNotFound: true);
        m_Player_Camera_Rotate_Toggle = m_Player.FindAction("Camera_Rotate_Toggle", throwIfNotFound: true);
        m_Player_Camera_Zoom = m_Player.FindAction("Camera_Zoom", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_Camera_Move;
    private readonly InputAction m_Player_Camera_Rotate;
    private readonly InputAction m_Player_Camera_Rotate_Toggle;
    private readonly InputAction m_Player_Camera_Zoom;
    public struct PlayerActions
    {
        private @PlayerCameraControls m_Wrapper;
        public PlayerActions(@PlayerCameraControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Camera_Move => m_Wrapper.m_Player_Camera_Move;
        public InputAction @Camera_Rotate => m_Wrapper.m_Player_Camera_Rotate;
        public InputAction @Camera_Rotate_Toggle => m_Wrapper.m_Player_Camera_Rotate_Toggle;
        public InputAction @Camera_Zoom => m_Wrapper.m_Player_Camera_Zoom;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @Camera_Move.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCamera_Move;
                @Camera_Move.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCamera_Move;
                @Camera_Move.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCamera_Move;
                @Camera_Rotate.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCamera_Rotate;
                @Camera_Rotate.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCamera_Rotate;
                @Camera_Rotate.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCamera_Rotate;
                @Camera_Rotate_Toggle.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCamera_Rotate_Toggle;
                @Camera_Rotate_Toggle.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCamera_Rotate_Toggle;
                @Camera_Rotate_Toggle.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCamera_Rotate_Toggle;
                @Camera_Zoom.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCamera_Zoom;
                @Camera_Zoom.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCamera_Zoom;
                @Camera_Zoom.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCamera_Zoom;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Camera_Move.started += instance.OnCamera_Move;
                @Camera_Move.performed += instance.OnCamera_Move;
                @Camera_Move.canceled += instance.OnCamera_Move;
                @Camera_Rotate.started += instance.OnCamera_Rotate;
                @Camera_Rotate.performed += instance.OnCamera_Rotate;
                @Camera_Rotate.canceled += instance.OnCamera_Rotate;
                @Camera_Rotate_Toggle.started += instance.OnCamera_Rotate_Toggle;
                @Camera_Rotate_Toggle.performed += instance.OnCamera_Rotate_Toggle;
                @Camera_Rotate_Toggle.canceled += instance.OnCamera_Rotate_Toggle;
                @Camera_Zoom.started += instance.OnCamera_Zoom;
                @Camera_Zoom.performed += instance.OnCamera_Zoom;
                @Camera_Zoom.canceled += instance.OnCamera_Zoom;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    public interface IPlayerActions
    {
        void OnCamera_Move(InputAction.CallbackContext context);
        void OnCamera_Rotate(InputAction.CallbackContext context);
        void OnCamera_Rotate_Toggle(InputAction.CallbackContext context);
        void OnCamera_Zoom(InputAction.CallbackContext context);
    }
}
